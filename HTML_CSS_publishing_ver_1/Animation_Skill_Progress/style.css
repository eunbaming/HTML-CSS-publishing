/* float, gradient, keyframe animation, first-child, last-child, 인라인 스타일 사용 */
/* delayy: keyframes, animation, nth-child, nth-of-type, flex, position */

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  color: #fff;
}

.progress-skill {
  width: 500px;
  background-color: #222;
  border-radius: 20px;
  padding: 30px;
  box-shadow: 0 0 30px #0000008c;
}
.progress-skill h1 {
  text-align: center;
  font-weight: normal;
}
.item p {
  /* border: 1px solid yellow; */
  /* float 속성으로 하지 않는 두번째 방법 :
  display: flex;
  justify-content: space-between; */
  overflow: hidden;
  margin-bottom: 5px;
}
.item p span:first-child {
  float: left;
}
.item p span:last-child {
  float: right;
}
.progress {
  border: 1px solid #6cd4c4;
  padding: 5px;
  border-radius: 3px;
}
.progress-level {
  height: 10px;
  background: linear-gradient(to right, violet, yellow);
  animation-name: ani;
  animation-duration: 1s;
  animation-fill-mode: both; /* animation-fill-mode : animation이 100% 구간까지 갔을 때 0%로 돌아가는 것이 아닌 100%에 머물도록 하는 것 */
}

/* nth-child()는 부모 요소의 n번째 자식 요소를 의미하는 것으로,
 태그종류와 상관없이 출연 순서로 순서가 정해진다. */
/* nth-of-type()은 부모 요소의 자식 중 type 조건을 만족하는 n번째 자식 요소를 의미하는 것으로,
태그를 주시하며 그 출연 순서로 순서가 정해진다. */
.progress-skill .item:nth-of-type(1) .progress-level {
  animation-delay: 0s;
}
.progress-skill .item:nth-of-type(2) .progress-level {
  animation-delay: 0.2s;
}
.progress-skill .item:nth-of-type(3) .progress-level {
  animation-delay: 0.4s;
}
.progress-skill .item:nth-of-type(4) .progress-level {
  animation-delay: 0.6s;
}
.progress-skill .item:nth-of-type(5) .progress-level {
  animation-delay: 0.8s;
}

@keyframes ani {
  0% {
    width: 0%;
  }
}
